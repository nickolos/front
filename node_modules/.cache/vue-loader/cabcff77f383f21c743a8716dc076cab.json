{"remainingRequest":"/home/nick/Документы/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nick/Документы/front/src/views/OAuthLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nick/Документы/front/src/views/OAuthLogin.vue","mtime":1547316542000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {HTTP} from '@/util/http'\nimport toast from '@/util/toast'\n\nexport default {\n  name: 'oauthLogin',\n  data () {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      appName: null,\n      appOwnerUsername: null,\n      clientID: this.$route.query.client_id,\n      redirectURI: this.$route.query.redirect_uri,\n      responseType: this.$route.query.response_type\n    }\n  },\n  created() {\n    this.getAppInfo()\n  },\n  methods: {\n    checkForm(e) {\n      this.errors = [];\n      if (!this.username) {\n        this.errors.push(\"Username is required.\")\n      }\n      if (!this.password) {\n        this.errors.push(\"Password is required.\")\n      }\n      if(!this.errors.length) {\n        this.getCode()\n      }\n      e.preventDefault()\n    },\n    getAppInfo() {\n      HTTP.get('oauth/app/' + this.clientID)\n      .then(response => {\n        this.appName = response.data.Name\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    },\n    getCode() {\n      HTTP.post('oauth/authorize', JSON.stringify({'AppUID': this.clientID, 'username': this.username, 'password': this.password}))\n      .then(response => {\n        const code = response.data.Code\n        window.location = this.redirectURI + '?code=' + code\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    }\n  }\n}\n",{"version":3,"sources":["OAuthLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OAuthLogin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"container\" v-if=\"responseType === 'code'\">\n  App {{ appName }} asks for access to your account.\n  <form @submit=\"checkForm\" novalidate=\"true\">\n    <div class=\"row error\" v-if=\"errors.length\">\n      <b>Please correct the following error(s):</b>\n      <ul>\n        <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n      </ul>\n    </div>\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" id=\"username\" v-model=\"username\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" v-model=\"password\">\n    <br>\n    <input class=\"button-primary\" type=\"submit\" value=\"Log in\">\n  </form>\n</div>\n<div v-else>\n  response_type != code\n  </div>\n</template>\n\n<script>\nimport {HTTP} from '@/util/http'\nimport toast from '@/util/toast'\n\nexport default {\n  name: 'oauthLogin',\n  data () {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      appName: null,\n      appOwnerUsername: null,\n      clientID: this.$route.query.client_id,\n      redirectURI: this.$route.query.redirect_uri,\n      responseType: this.$route.query.response_type\n    }\n  },\n  created() {\n    this.getAppInfo()\n  },\n  methods: {\n    checkForm(e) {\n      this.errors = [];\n      if (!this.username) {\n        this.errors.push(\"Username is required.\")\n      }\n      if (!this.password) {\n        this.errors.push(\"Password is required.\")\n      }\n      if(!this.errors.length) {\n        this.getCode()\n      }\n      e.preventDefault()\n    },\n    getAppInfo() {\n      HTTP.get('oauth/app/' + this.clientID)\n      .then(response => {\n        this.appName = response.data.Name\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    },\n    getCode() {\n      HTTP.post('oauth/authorize', JSON.stringify({'AppUID': this.clientID, 'username': this.username, 'password': this.password}))\n      .then(response => {\n        const code = response.data.Code\n        window.location = this.redirectURI + '?code=' + code\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    }\n  }\n}\n</script>"]}]}