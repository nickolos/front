{"remainingRequest":"/home/nick/Документы/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nick/Документы/front/src/components/auth/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nick/Документы/front/src/components/auth/Login.vue","mtime":1547316542000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'loginForm',\n\n  data () {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      remember: false\n    }\n  },\n  computed: {\n    ...mapState(['pending'])\n  },\n  methods: {\n    checkForm(e) {\n      this.errors = [];\n      if (!this.username) {\n        this.errors.push(\"Username is required.\")\n      }\n      if (!this.password) {\n        this.errors.push(\"Password is required.\")\n      }\n      if(!this.errors.length) {\n        this.login()\n      }\n      e.preventDefault()\n    },\n    login() {\n      this.$store.dispatch(\"login\", {username: this.username, password: this.password, refresh: this.remember})\n      .then(() => this.$router.push('/'))\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n<div class=\"container\">\n  <div v-if=\"pending\">\n    Logging in\n  </div>\n  <form @submit=\"checkForm\" novalidate=\"true\">\n    <div class=\"row error\" v-if=\"errors.length\">\n      <b>Please correct the following error(s):</b>\n      <ul>\n        <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n      </ul>\n    </div>\n      <label for=\"username\">Username</label>\n      <input type=\"text\" name=\"username\" id=\"username\" v-model=\"username\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" name=\"password\" id=\"password\" v-model=\"password\">\n      <label for=\"remember\">Remember me</label>\n      <input type=\"checkbox\" name=\"remember\" id=\"remember\" value=\"Remember\" v-model=\"remember\">\n      <br>\n      <input class=\"button-primary\" type=\"submit\" value=\"Log in\">\n    </form>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'loginForm',\n\n  data () {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      remember: false\n    }\n  },\n  computed: {\n    ...mapState(['pending'])\n  },\n  methods: {\n    checkForm(e) {\n      this.errors = [];\n      if (!this.username) {\n        this.errors.push(\"Username is required.\")\n      }\n      if (!this.password) {\n        this.errors.push(\"Password is required.\")\n      }\n      if(!this.errors.length) {\n        this.login()\n      }\n      e.preventDefault()\n    },\n    login() {\n      this.$store.dispatch(\"login\", {username: this.username, password: this.password, refresh: this.remember})\n      .then(() => this.$router.push('/'))\n    }\n  }\n}\n</script>"]}]}