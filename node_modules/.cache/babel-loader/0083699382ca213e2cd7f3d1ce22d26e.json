{"remainingRequest":"/home/nick/Документы/front/node_modules/babel-loader/lib/index.js!/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nick/Документы/front/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nick/Документы/front/src/views/OAuthLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/nick/Документы/front/src/views/OAuthLogin.vue","mtime":1547316542000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/nick/Документы/front/node_modules/cache-loader/dist/cjs.js","mtime":1550345624276},{"path":"/home/nick/Документы/front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/nick/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/front/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HTTP } from '@/util/http';\nimport toast from '@/util/toast';\nexport default {\n  name: 'oauthLogin',\n  data: function data() {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      appName: null,\n      appOwnerUsername: null,\n      clientID: this.$route.query.client_id,\n      redirectURI: this.$route.query.redirect_uri,\n      responseType: this.$route.query.response_type\n    };\n  },\n  created: function created() {\n    this.getAppInfo();\n  },\n  methods: {\n    checkForm: function checkForm(e) {\n      this.errors = [];\n\n      if (!this.username) {\n        this.errors.push(\"Username is required.\");\n      }\n\n      if (!this.password) {\n        this.errors.push(\"Password is required.\");\n      }\n\n      if (!this.errors.length) {\n        this.getCode();\n      }\n\n      e.preventDefault();\n    },\n    getAppInfo: function getAppInfo() {\n      var _this = this;\n\n      HTTP.get('oauth/app/' + this.clientID).then(function (response) {\n        _this.appName = response.data.Name;\n      }).catch(function (error) {\n        toast.error(error.message);\n      });\n    },\n    getCode: function getCode() {\n      var _this2 = this;\n\n      HTTP.post('oauth/authorize', _JSON$stringify({\n        'AppUID': this.clientID,\n        'username': this.username,\n        'password': this.password\n      })).then(function (response) {\n        var code = response.data.Code;\n        window.location = _this2.redirectURI + '?code=' + code;\n      }).catch(function (error) {\n        toast.error(error.message);\n      });\n    }\n  }\n};",{"version":3,"sources":["OAuthLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAA,IAAA,QAAA,aAAA;AACA,OAAA,KAAA,MAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,gBAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SANA;AAOA,MAAA,WAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAPA;AAQA,MAAA,YAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,UAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,CADA,EACA;AACA,WAAA,MAAA,GAAA,EAAA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,uBAAA;AACA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA;AACA,aAAA,MAAA,CAAA,IAAA,CAAA,uBAAA;AACA;;AACA,UAAA,CAAA,KAAA,MAAA,CAAA,MAAA,EAAA;AACA,aAAA,OAAA;AACA;;AACA,MAAA,CAAA,CAAA,cAAA;AACA,KAbA;AAcA,IAAA,UAdA,wBAcA;AAAA;;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,eAAA,KAAA,QAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACA,OANA;AAOA,KAtBA;AAuBA,IAAA,OAvBA,qBAuBA;AAAA;;AACA,MAAA,IAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,gBAAA;AAAA,kBAAA,KAAA,QAAA;AAAA,oBAAA,KAAA,QAAA;AAAA,oBAAA,KAAA;AAAA,OAAA,CAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,MAAA,CAAA,WAAA,GAAA,QAAA,GAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACA,OAPA;AAQA;AAhCA;AAjBA,CAAA","sourcesContent":["<template>\n<div class=\"container\" v-if=\"responseType === 'code'\">\n  App {{ appName }} asks for access to your account.\n  <form @submit=\"checkForm\" novalidate=\"true\">\n    <div class=\"row error\" v-if=\"errors.length\">\n      <b>Please correct the following error(s):</b>\n      <ul>\n        <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n      </ul>\n    </div>\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" id=\"username\" v-model=\"username\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" v-model=\"password\">\n    <br>\n    <input class=\"button-primary\" type=\"submit\" value=\"Log in\">\n  </form>\n</div>\n<div v-else>\n  response_type != code\n  </div>\n</template>\n\n<script>\nimport {HTTP} from '@/util/http'\nimport toast from '@/util/toast'\n\nexport default {\n  name: 'oauthLogin',\n  data () {\n    return {\n      errors: [],\n      username: null,\n      password: null,\n      appName: null,\n      appOwnerUsername: null,\n      clientID: this.$route.query.client_id,\n      redirectURI: this.$route.query.redirect_uri,\n      responseType: this.$route.query.response_type\n    }\n  },\n  created() {\n    this.getAppInfo()\n  },\n  methods: {\n    checkForm(e) {\n      this.errors = [];\n      if (!this.username) {\n        this.errors.push(\"Username is required.\")\n      }\n      if (!this.password) {\n        this.errors.push(\"Password is required.\")\n      }\n      if(!this.errors.length) {\n        this.getCode()\n      }\n      e.preventDefault()\n    },\n    getAppInfo() {\n      HTTP.get('oauth/app/' + this.clientID)\n      .then(response => {\n        this.appName = response.data.Name\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    },\n    getCode() {\n      HTTP.post('oauth/authorize', JSON.stringify({'AppUID': this.clientID, 'username': this.username, 'password': this.password}))\n      .then(response => {\n        const code = response.data.Code\n        window.location = this.redirectURI + '?code=' + code\n      })\n      .catch(error => {\n        toast.error(error.message)\n      })\n    }\n  }\n}\n</script>"],"sourceRoot":"src/views"}]}